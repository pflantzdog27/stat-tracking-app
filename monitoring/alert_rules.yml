# Alert rules for Hockey Stats Tracking App
groups:
  - name: application_alerts
    rules:
      # High error rate
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second"

      # High response time
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }} seconds"

      # Application down
      - alert: ApplicationDown
        expr: up{job="nextjs-app"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Application is down"
          description: "The Next.js application has been down for more than 1 minute"

  - name: database_alerts
    rules:
      # Database connection issues
      - alert: DatabaseConnectionHigh
        expr: pg_stat_activity_count > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High database connections"
          description: "Database has {{ $value }} active connections"

      # Slow queries
      - alert: SlowQueries
        expr: rate(pg_stat_statements_mean_time_ms[5m]) > 1000
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Slow database queries detected"
          description: "Average query time is {{ $value }}ms"

      # Database disk usage
      - alert: DatabaseDiskUsageHigh
        expr: (pg_database_size_bytes / (1024^3)) > 10
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Database disk usage high"
          description: "Database size is {{ $value }}GB"

  - name: system_alerts
    rules:
      # High CPU usage
      - alert: HighCpuUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value }}%"

      # High memory usage
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value }}%"

      # Low disk space
      - alert: LowDiskSpace
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Low disk space"
          description: "Disk usage is {{ $value }}%"

  - name: cache_alerts
    rules:
      # Redis down
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Redis is down"
          description: "Redis has been down for more than 1 minute"

      # High Redis memory usage
      - alert: RedisHighMemoryUsage
        expr: (redis_memory_used_bytes / redis_memory_max_bytes) * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Redis high memory usage"
          description: "Redis memory usage is {{ $value }}%"

  - name: business_logic_alerts
    rules:
      # Low API success rate
      - alert: LowApiSuccessRate
        expr: (rate(http_requests_total{status=~"2.."}[5m]) / rate(http_requests_total[5m])) * 100 < 95
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Low API success rate"
          description: "API success rate is {{ $value }}%"

      # No recent data updates
      - alert: StaleData
        expr: time() - max(last_data_update_timestamp) > 3600
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Data hasn't been updated recently"
          description: "Last data update was {{ $value }} seconds ago"